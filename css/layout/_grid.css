/*
 * Arquivo: _grid.css
 * Descrição: Implementação do sistema de Grid de 12 colunas e layout base.
 * Requisito: Implementar leiaute principal e desenvolver sistema de grid customizado (12 colunas).
 */

/* ------------------------------------------------
 * 1. CONTAINER (Leiaute Principal)
 * ------------------------------------------------ */

.container {
    /* Centraliza o conteúdo e define uma largura máxima */
    width: 100%;
    max-width: 1100px; /* Largura base para Desktop Médio */
    margin: 0 auto;
    padding: var(--space-m); /* Padding padrão (mobile first) */
}

/* Ajuste do container para telas maiores (a partir de 768px - Breakpoint 3) */
@media (min-width: 768px) {
    .container {
        padding: var(--space-l); /* Aumenta o padding nas laterais */
    }
}

/* Ajuste do container para telas muito grandes (a partir de 1200px - Breakpoint 5) */
@media (min-width: 1200px) {
    .container {
        max-width: 1300px; /* Usa a largura máxima definida no _breakpoints.css */
    }
}

/* ------------------------------------------------
 * 2. CSS GRID SYSTEM (12 Colunas)
 * ------------------------------------------------ */

/* Classe base para ativar o grid container */
.grid {
    display: grid;
    /* Usa a variável de espaçamento modular para o gap */
    gap: var(--space-l); 
}

/* Grid de 12 colunas para organização de conteúdo */
.grid-12-cols {
    /* Por padrão, em mobile, todos os itens ocupam a largura total (1 coluna) */
    grid-template-columns: 1fr;
    gap: var(--space-m); /* Gap menor em mobile */
}

/* Alinhamento de itens dentro do grid */
.content-center {
    justify-self: center; /* Centraliza o item na horizontal */
    align-self: center;   /* Centraliza o item na vertical */
}

.text-center {
    text-align: center;
}


/* ------------------------------------------------
 * 3. RESPONSIVIDADE (Classes de Coluna)
 * Mobile First: col-span-12 é o padrão (1fr)
 * ------------------------------------------------ */

/* Tablets Horizontais / Desktop Pequeno (min-width: 768px - Breakpoint 3) */
@media (min-width: 768px) {
    /* Aplica o template de 12 colunas a partir do breakpoint 'md' */
    .grid-12-cols {
        grid-template-columns: repeat(12, 1fr);
        gap: var(--space-l); /* Restaura o gap padrão do desktop */
    }
    
    /* Mixins de Colunas (Grid Item) */
    .col-md-1 { grid-column: span 1; }
    .col-md-2 { grid-column: span 2; }
    .col-md-3 { grid-column: span 3; }
    .col-md-4 { grid-column: span 4; } /* 1/3 da largura */
    .col-md-5 { grid-column: span 5; }
    .col-md-6 { grid-column: span 6; } /* 1/2 da largura */
    .col-md-7 { grid-column: span 7; }
    .col-md-8 { grid-column: span 8; } /* 2/3 da largura */
    .col-md-9 { grid-column: span 9; }
    .col-md-10 { grid-column: span 10; }
    .col-md-11 { grid-column: span 11; }
    .col-md-12 { grid-column: span 12; } /* Largura total */

    /* Classes de Offset (empurrar a coluna) */
    .col-md-offset-1 { grid-column-start: 2; }
    .col-md-offset-2 { grid-column-start: 3; }
    .col-md-offset-3 { grid-column-start: 4; }
    /* Adicione mais offsets conforme necessário */
}

/* Desktop Médio (min-width: 992px - Breakpoint 4) */
@media (min-width: 992px) {
    /* Colunas 'lg' (largura maior) - Sobrescrevem 'md' */
    .col-lg-3 { grid-column: span 3; } /* 4 itens por linha */
    .col-lg-4 { grid-column: span 4; } /* 3 itens por linha */
    .col-lg-6 { grid-column: span 6; } /* 2 itens por linha */
}

/* Desktop Grande (min-width: 1200px - Breakpoint 5) */
@media (min-width: 1200px) {
    /* Colunas 'xl' (largura ainda maior) - Sobrescrevem 'lg' */
    .col-xl-2 { grid-column: span 2; } /* 6 itens por linha (para cards menores) */
}


/* ------------------------------------------------
 * 4. FLEXBOX UTILS (Requisito: Utilizar flexbox para componentes internos)
 * ------------------------------------------------ */

.flex {
    display: flex;
}

.flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

.flex-between {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.flex-col {
    flex-direction: column;
}

.flex-gap-m {
    gap: var(--space-m);
}